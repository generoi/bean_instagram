<?php

/**
 * @file bean_instagram.module
 * TODO: Enter file description here.
 */

/**
 * Implements hook_menu().
 */
function bean_instagram_menu() {
  $items['bean_instagram/get_access_token'] = array(
    'title' => 'Get Access Token',
    'page callback' => 'bean_instagram_get_access_token_page',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Page callback for recieving an access token.
 */
function bean_instagram_get_access_token_page() {
  $query_parameters = drupal_get_query_parameters();

  if (isset($query_parameters['destination'])) {
    $destination = $query_parameters['destination'];
    unset($query_parameters['destination']);
    unset($_GET['destination']);

    drupal_goto($destination, array('query' => $query_parameters), 301);
  }
  else {
    drupal_not_found();
  }
}

/**
 * Helper function for Instagram access token.
 */
function bean_instagram_get_access_token($options) {
  $ch = curl_init();

  curl_setopt($ch, CURLOPT_URL, 'https://api.instagram.com/oauth/access_token');
  curl_setopt($ch, CURLOPT_POSTFIELDS, drupal_http_build_query($options));
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

  $result = curl_exec($ch);

  curl_close($ch);

  return drupal_json_decode($result);
}

/**
 * Implements hook_form_alter().
 */
function bean_instagram_form_bean_form_alter(&$form, &$form_state, $form_id) {
  if ($form['#bundle'] == 'instagram') {
    $query_parameters = drupal_get_query_parameters();

    // Replace form with cached form so that values are kept.
    if (isset($query_parameters['form_build_id'])) {
      $form_build_id = $query_parameters['form_build_id'];
      $cached = cache_get('bean_instagram_form_' . $form_build_id, 'cache_form');
      $form = $cached->data;
    }

    if (isset($query_parameters['code']) && isset($query_parameters['client_id']) && isset($query_parameters['client_secret'])) {
      // Get Access Token
      $options = array(
        'client_id' => $query_parameters['client_id'],
        'client_secret' => $query_parameters['client_secret'],
        'grant_type' => 'authorization_code',
        'redirect_uri' => url('bean_instagram/get_access_token', array(
          'absolute' => TRUE,
          'query' => array(
            'destination' => current_path(),
            'client_id' => $query_parameters['client_id'],
            'client_secret' => $query_parameters['client_secret'],
            'form_build_id' => $form_build_id,
          ),
        )),
        'code' => $query_parameters['code'],
      );
      $response = bean_instagram_get_access_token($options);

      if (isset($response['access_token'])) {
        $form['authentication']['access_token']['#value'] = $response['access_token'];
        $form['settings']['accessToken']['#value'] = $response['access_token'];
      }
      if (isset($response['user']['id'])) {
        $form['settings']['userId']['#value'] = $response['user']['id'];
      }
    }
  }
}

/**
 * Submit handler for Get Access Token button.
 */
function bean_instagram_get_access_token_submit($form, &$form_state) {
  $values = $form_state['values'];
  $form_build_id = $values['form_build_id'];

  // Skip existing redirects.
  if (isset($_GET['destination'])) {
    unset($_GET['destination']);
  }

  // Store form in cache so it can be retrieved after authentication.
  cache_set('bean_instagram_form_' . $form_build_id, $form, 'cache_form', CACHE_TEMPORARY);

  // Build redirect query.
  $query = drupal_http_build_query(array(
    'client_id' => $values['authentication']['client_id'],
    'redirect_uri' => url('bean_instagram/get_access_token', array(
      'absolute' => TRUE,
      'query' => array(
        'destination' => current_path(),
        'client_id' => $values['authentication']['client_id'],
        'client_secret' => $values['authentication']['client_secret'],
        'form_build_id' => $form_build_id,
      ),
    )),
    'response_type' => 'code',
  ));

  $form_state['redirect'] = "https://api.instagram.com/oauth/authorize/?$query";
}

/**
 * Implements hook_library().
 */
function bean_instagram_library() {
  $module_path = drupal_get_path('module', 'bean_instagram');
  $library_path = libraries_get_path('instafeed');

  $items['instafeed'] = array(
    'title' => t('instafeed'),
    'version' => '1.2.0',
    'js' => array(
      $library_path . '/instafeed.min.js' => array('group' => JS_LIBRARY),
    ),
  );
  $items['bean_instagram'] = array(
    'title' => t('Bean Instagram'),
    'version' => '0.1.1',
    'js' => array(
      $module_path . '/bean_instagram.js' => array('group' => JS_DEFAULT),
    ),
    'dependencies' => array(
      array('bean_instagram', 'instafeed'),
    ),
  );
  return $items;
}

/**
 * Implements hook_bean_types_api_info().
 */
function bean_instagram_bean_types_api_info() {
  return array('api' => 5);
}

/**
 * Implements hook_bean_types().
 */
function bean_instagram_bean_types() {
  $plugins = array();
  $plugin_path = drupal_get_path('module', 'bean_instagram') . '/plugins/bean';
  $plugins['instagram'] = array(
    'label' => t('Instagram Bean'),
    'description' => t('Instagram content'),
    'handler' => array(
      'class' => 'InstagramBean',
      'parent' => 'bean',
      'path' => $plugin_path,
    ),
    'path' => $plugin_path,
  );
  return $plugins;
}
